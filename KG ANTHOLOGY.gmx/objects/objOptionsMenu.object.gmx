<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>select = global.menuSelectPrev[1];

xSelector = 124;
ySelector = 196;
xSeperation = 550;
ySeperation = 48;

optionsNum = 4; //sets number of separate options available

strSelect[0] = "Music";
strSelect[1] = "Volume Level";
strSelect[2] = "Screen Mode";
strSelect[3] = "Set Keyboard Controls";

playerIndex = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animate player sprite
playerIndex = (playerIndex + 1/5) mod 4;

if (keyboard_check_pressed(global.menuUpButton))
{
    audio_play_sound(sndMenuMove, 10, false);
    select -= 1;
    if(select &lt; 0)
        select = optionsNum-1;
}
else if (keyboard_check_pressed(global.menuDownButton))
{
    audio_play_sound(sndMenuMove, 10, false)
    select += 1;
    if(select &gt; optionsNum-1)
        select = 0;
}
else if (keyboard_check_pressed(global.menuBackButton))
{
    //save changes and go back
    scrSaveConfig();
    global.menuSelectPrev[1] = 0;
    instance_destroy()
    objNewFileMenu.phase = 0
    audio_play_sound(sndAcceptFile, 10, false)
    exit;
}
else if (keyboard_check_pressed(global.menuAcceptButton))
{
    if (select == 0)    //toggle mute music
    {
        scrToggleMusic();
        audio_play_sound(sndAcceptFile, 10, false)
    }
    else if (select == 2)   //toggle fullscreen
    {
        global.fullscreenMode = !global.fullscreenMode;
        window_set_fullscreen(global.fullscreenMode);
        audio_play_sound(sndAcceptFile, 10, false)
    }
    else if (select == 3)   //go to the keyboard controls menu
    {
        scrSaveConfig();    //save changes
        global.menuSelectPrev[1] = select;
        instance_create(x,y,objKeyboardControlsMenu);
        instance_destroy();
        exit;
        audio_play_sound(sndAcceptFile, 10, false)
    }
}


if (select == 1)
{
    if (keyboard_check(global.menuRightButton))  //raise volume
    {
        if (global.volumeLevel &lt; 100)
            global.volumeLevel += 1;
        
        audio_master_gain(global.volumeLevel/100);  //set master gain
    }
    else if (keyboard_check(global.menuLeftButton))  //lower volume
    {
        if (global.volumeLevel &gt; 0)
            global.volumeLevel -= 1;
        
        audio_master_gain(global.volumeLevel/100);  //set master gain
    }
}

//lerp the view when leaving options menu
view_yview[0] = lerp(view_yview[0], 608, .1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_set_font(fDefault30);
draw_set_halign(fa_left);

for(var i = 0; i &lt; optionsNum; i++) {
    //draw_text(xSelector,608+ySelector+(ySeperation*i),strSelect[i]);
    scrDrawTextDropShadow(strSelect[i], c_black, xSelector, 608+ySelector+(ySeperation*i))
    }

draw_set_halign(fa_right);

if (global.muteMusic) {
    //draw_text(xSelector+xSeperation,608+ySelector,"Off");
    scrDrawTextDropShadow("Off", c_black, xSelector+xSeperation, 608+ySelector)
    }
else {
    //draw_text(xSelector+xSeperation,608+ySelector,"On");
    scrDrawTextDropShadow("On", c_black, xSelector+xSeperation, 608+ySelector)
    }

//draw_text(xSelector+xSeperation,608+ySelector+ySeperation,string(global.volumeLevel) + "%");
scrDrawTextDropShadow(string(global.volumeLevel) + "%", c_black, xSelector+xSeperation, 608+ySelector+ySeperation)
    
if (global.fullscreenMode) {
    draw_text(xSelector+xSeperation,608+ySelector+(ySeperation*2),"Fullscreen");
    scrDrawTextDropShadow("Fullscreen", c_black, xSelector+xSeperation,608+ySelector+(ySeperation*2))
    }
else {
    draw_text(xSelector+xSeperation,608+ySelector+(ySeperation*2),"Windowed");
    scrDrawTextDropShadow("Windowed", c_black, xSelector+xSeperation,608+ySelector+(ySeperation*2))
    }

draw_sprite_ext(sprPlayerIdle,playerIndex,xSelector-16+2,608+ySelector+(ySeperation*select)+26+2, 1, 1, 0, c_black, .4);
draw_sprite(sprPlayerIdle,playerIndex,xSelector-16,608+ySelector+(ySeperation*select)+26);

draw_set_font(fTitleFontSmall); //new font, replace if too big
draw_set_valign(fa_top)
draw_set_halign(fa_left);
//draw_text(34,608+572,"[Shift] Select");
scrDrawTextDropShadow("[Shift] Select", c_black, 34, 608+572)
draw_set_halign(fa_right);
//draw_text(766,608+572,"[Z] Leave Menu");
scrDrawTextDropShadow("[Z] Leave Menu", c_black, 766, 608+572)

//draw button info for the options menu
//draw_set_halign(fa_middle);
//draw_text(400,572,"[&lt;] Browse Files [&gt;]");

draw_set_valign(fa_top)
draw_set_halign(fa_left)

draw_set_color(c_white)

//scrDrawButtonInfo(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
