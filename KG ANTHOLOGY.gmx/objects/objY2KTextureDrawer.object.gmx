<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sandSurf = noone

instance_create(0, 0, objY2KBGTextureDrawer)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
part_particles_clear(y2kSys);
part_emitter_destroy(y2kSys, pemi);

if (instance_exists(objPBFlyingPlatform)) {
    instance_destroy();
    part_particles_clear(sysWindPlat);
    with (objPBFlyingPlatform) part_emitter_destroy(other.sysWindPlat, pemi);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y2kSys = part_system_create();
part_system_depth(y2kSys, -300);

y2lPart = part_type_create();
part_type_shape(y2lPart, pt_shape_circle);
part_type_color1(y2lPart, c_white);
part_type_alpha3(y2lPart, 0, 0.5, 0);
part_type_life(y2lPart, 180, 180);
part_type_size(y2lPart, 0, 3, 0.01, 0);
part_type_speed(y2lPart, 0, 0, 0, 0);
part_type_direction(y2lPart, 0, 0, 0, 0);
part_type_gravity(y2lPart, 0, 270);
part_type_blend(y2lPart, false);

pemi = part_emitter_create(y2kSys);
part_emitter_region(y2kSys, pemi, 0, 800, 0, 608, ps_shape_rectangle, ps_distr_linear);
part_emitter_stream(y2kSys, pemi, y2lPart, -100);

repeat (room_speed*3)
    part_system_update(y2kSys)
    
    
if (instance_exists(objPBFlyingPlatform)) {
    sysWindPlat = part_system_create();
    part_system_depth(sysWindPlat, -100);
    
    windPlatPart = part_type_create();
    part_type_shape(windPlatPart, pt_shape_line);
    part_type_color1(windPlatPart, 16777215);
    part_type_alpha3(windPlatPart, 0, 0.4, 0);
    part_type_life(windPlatPart, 30, 30);
    part_type_size(windPlatPart, 0.38, 0.83, 0, 0);
    part_type_speed(windPlatPart, 1, 4, .25, 0);
    part_type_direction(windPlatPart, 90, 90, 0, 0);
    part_type_orientation(windPlatPart, 90, 90, 0, 0, false);
    part_type_gravity(windPlatPart, 0, 90);
    part_type_blend(windPlatPart, false);
    
    with (objPBFlyingPlatform) {
        pemi = part_emitter_create(other.sysWindPlat);
        part_emitter_region(other.sysWindPlat, pemi, x, x+sprite_width, y+192, 608, ps_shape_rectangle, ps_distr_linear);
        part_emitter_stream(other.sysWindPlat, pemi, other.windPlatPart, 1);
    }
    
    repeat (room_speed*3)
        part_system_update(sysWindPlat)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(sandSurf))
    sandSurf = surface_create(room_width, room_height)


/*draw_set_color(c_black)
with (objBlock) {
    if (object_index != objFallingLeaf &amp;&amp; object_index != objTelescopingBlockSpawn &amp;&amp; object_index != objMovingShootBlock) draw_rectangle(x-1, y-1, x+sprite_width, y+sprite_height, false)
}
with (objSpikeUp) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
}
with (objSpikeRight) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
}
with (objSpikeDown) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
}
with (objSpikeLeft) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
    }*/
    
if (surface_exists(sandSurf)) {    
    surface_set_target(sandSurf)
    
    draw_clear_alpha(c_black, 0)
    draw_set_color_write_enable(true, true, true, false)
    draw_background_tiled(bGrassTexture10, 0, 0)
    
    draw_set_color_write_enable(false,false,false,true);
    draw_set_alpha(1);
    with(objBlock) {
        if (object_index != objPlatform &amp;&amp; object_index != objPBFlyingPlatform) {
                draw_set_color(c_white)
                draw_rectangle(x, y, x+sprite_width-1, y+sprite_height-1, false)
                var i;
                var j;
                for (i = x; i &lt; x+sprite_width; i += 16) {
                    for (j = y; j &lt; y+sprite_height; j += 16) {
                        draw_sprite(sprGrassEdgeTexture, 0, i, j)
                    }
                }
            }
        }
    with (objSpikeUp) {draw_self(); draw_sprite(sprY2KSpikeUp, 0, x, y)}
    with (objSpikeRight) {draw_self(); draw_sprite(sprY2KSpikeRight, 0, x, y)}
    with (objSpikeLeft) {draw_self(); draw_sprite(sprY2KSpikeLeft, 0, x, y)}
    with (objSpikeDown) {draw_self(); draw_sprite(sprY2KSpikeDown, 0, x, y)}
    draw_set_color_write_enable(true,true,true,true);
    surface_reset_target()
    draw_surface(sandSurf, 0, 0)
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
