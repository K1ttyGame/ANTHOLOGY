<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBasketBall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gravity = 0.2

phase = 0;
cooldown = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == 0) {
    speed *= 0.995 
    if (instance_exists(objBasketballNet) &amp;&amp; x &gt; objBasketballNet.x+20 &amp;&amp; x &lt; objBasketballNet.x+35 &amp;&amp; y &gt; objBasketballNet.y+45 &amp;&amp; y &lt; objBasketballNet.y+68) {
        phase = 2
        hspeed = 0
    }
    
    else if place_meeting(x,y,objBasketballBlock) {
    
        x -= hspeed
        y -= vspeed
        
        if place_meeting(x,y+abs(vspeed),objBasketballBlock) {
            move_contact_solid(270,abs(vspeed))
            vspeed = -vspeed * 0.8
            y += vspeed
            audio_play_sound(sndBasketballBounce, 10, false)
        }
        else if place_meeting(x,y-abs(vspeed),objBasketballBlock) {
            move_contact_solid(90,abs(vspeed))
            vspeed = -vspeed * 0.8
            y += vspeed
            audio_play_sound(sndBasketballBounce, 10, false)
        }
        if place_meeting(x+hspeed,y,objBasketballBlock) {
            if hspeed &gt; 0 move_contact_solid(0,hspeed)
            else move_contact_solid(180,abs(hspeed))
            hspeed = -hspeed * 0.9
            x += hspeed
            audio_play_sound(sndBasketballBounce, 10, false)
        }
    }
}

if (phase == 1) {
    if (instance_exists(objPlayer)) {
        x = objPlayer.x
        y = objPlayer.y-32
        if (keyboard_check_pressed(global.shootButton)) and (place_free(x, y)) {
            phase = 0;
            if (keyboard_check(global.upButton)) {
                hspeed = 3*sign(objPlayer.xScale)
                vspeed = -5
            }
            
            else if (keyboard_check(global.downButton)) {
                hspeed = 7*sign(objPlayer.xScale)
                vspeed = -2
            }
            else { 
                hspeed = 5*sign(objPlayer.xScale)
                vspeed = -3
            }
            
            
            y -= 2;
            gravity = 0.2
            cooldown = 20
        }
    }
    else
        phase = 0;
}

if (phase == 2) {
    vspeed += .1
    if (instance_exists(objBasketballNet)) {
        x = lerp(x, objBasketballNet.x+15, .1)
        if (y &gt; objBasketballNet.y+116) {
            phase = 0
            hspeed = -5
            if (instance_exists(objBasketballNet)) {
                objBasketballNet.challenge++
                objBasketballNet.spawnPart = true
                }
            }
        }
}

if (cooldown &gt; 0)
    cooldown--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == 0) {
        var ball = instance_position(x,y,objBasketBall);
    if ball != noone {
        var len = point_distance(ball.x,ball.y,x,y);
        var dir = point_direction(ball.x,ball.y,x,y);
        hspeed += lengthdir_x(len,dir)/3
        vspeed += lengthdir_y(len,dir)/3
    }
}

if (instance_exists(objBasketballNet) &amp;&amp; x &gt;= objBasketballNet.x+96) || x &lt; 0 {
    instance_destroy()
    instance_create(xstart, ystart, objBasketBall)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (cooldown == 0) {
    phase = 1;
    gravity = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
