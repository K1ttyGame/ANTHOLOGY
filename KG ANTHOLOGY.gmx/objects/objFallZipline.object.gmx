<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFallZiplineBolt</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ID = 0 //set to pair in creation code

otherX = 0
otherY = 0
otherID = 0
endPart = false //set for player moving towards end

zSpeed = 6
zDirection = 0

drawBolt = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objFallZipline)) {
    with (objFallZipline) {
        if (ID == other.ID &amp;&amp; endPart == true) {
            other.otherX = x
            other.otherY = y
            other.otherID = ID
        }
    }
}

if (endPart == false) {
    zSpeed = 6
    zDirection = point_direction(x, y, otherX, otherY)
}

if (instance_exists(objPlayer) &amp;&amp; collision_line(x, y, otherX, otherY, objPlayer, false, false) &amp;&amp; objPlayer.ziplineCooldown == 0) {
    objPlayer.zipline = true
    if !(instance_exists(objZiplinePoint)) {
        with instance_create(objPlayer.x, objPlayer.y, objZiplinePoint) {
            speed = other.zSpeed
            direction = other.zDirection
            endID = other.otherID
            endX = other.otherX
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_self()
if (instance_exists(objFallZipline)) {
    with (objFallZipline) {
        if (ID == other.ID &amp;&amp; endPart == false) {
            draw_set_color(c_white)
            draw_line_width(x, y-16, other.x, other.y-16, 3)
            draw_set_color(c_white)
        }
    }
}
if (drawBolt)
    draw_sprite(sprite_index, 0, x, y-16)
else
    draw_sprite(sprFallZiplinePole, 0, x, y-16)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
