<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sunspike transition effect

a = 1;
srf = noone;
psys = noone;
pem1 = noone;
if (!part_system_exists(psys))
{
   psys = part_system_create();
}
if (part_system_exists(psys))
{
   pem1 = part_emitter_create(psys);
   part_system_automatic_draw(psys, false);
}

part1 = part_type_create();
part_type_sprite(part1,sprCthPx,false,true,false);
part_type_size(part1,2.5,7,-0.01,0.04);
part_type_speed(part1,0.5,1,.05,0.025);
part_type_direction(part1,165,210,0,0.5);
part_type_alpha2(part1,0.8,0.4);
part_type_color_hsv(part1,0,50,50,150,50,150);
part_type_orientation(part1,0,0,0,0,1);
part_type_life(part1, 300, 300);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(srf);
if(part_system_exists(psys))
{
    part_particles_clear(psys);
    part_system_destroy(psys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(part_system_exists(psys))
{
    if(part_emitter_exists(psys,pem1))
    {
        part_emitter_region(psys, pem1, view_xview[0]+view_wview[0]+32, view_xview[0]+view_wview[0]+96, view_yview[0]-64, view_yview[0]+view_hview[0]+64, ps_shape_rectangle, ps_distr_linear);
        part_emitter_stream(psys,pem1,part1,2);
        if(instance_exists(objCthAv))
        {
        if((objCthAv.beat_fractional&gt;0 &amp;&amp; objCthAv.beat_fractional&lt;=1 &amp;&amp; objCthAv.beat_count%4 == 3)||objCthAv.t == 172)
        {
            part_emitter_burst(psys,pem1,part1,500)
        }
        }
    }
    part_system_automatic_draw(psys, false);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(srf);
if(part_system_exists(psys))
{
    part_particles_clear(psys);
    part_system_destroy(psys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(srf);
if(part_system_exists(psys))
{
    part_particles_clear(psys);
    part_system_destroy(psys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!surface_exists(srf)){
    srf = surface_create(view_wview[0],view_hview[0]);
}

if(surface_exists(srf)){
    surface_set_target(srf);
    draw_clear_alpha(c_black,0);
    draw_sprite_ext(sprCthScreen,0,0,0,1,1,0,c_black,0);
    draw_set_color_write_enable(false,false,false,true);
    draw_set_alpha(1);
    with(objBlock)
    {
        draw_rectangle(x,y,x+image_xscale*32,y+image_yscale*32,false)
    }
    draw_set_color_write_enable(true,true,true,true);
    draw_set_blend_mode_ext(bm_dest_alpha,bm_zero)
    //draw_set_color_write_enable(true,true,true,false);
    part_system_drawit(psys);
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    //draw_set_alpha(a);
    /*
    draw_set_color_write_enable(false,false,false,true);
    draw_clear_alpha(c_black,1);
    draw_set_color_write_enable(true,true,true,true);
    */
    draw_set_blend_mode_ext(bm_src_alpha,bm_dest_color);
    draw_surface(srf,0,0);
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
