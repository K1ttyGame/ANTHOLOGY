<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprClaw</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprClawMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//set this in creation code
clawLength = 64

//ignore this
timer = 0
rotationSide = 0 //0 for center, -1 for left, 1 for right
anchorPoint = ystart-clawLength
anchorAngle = 270

flagL = false
flagR = false

x = xstart+lengthdir_x(clawLength, anchorAngle)
y = anchorPoint+lengthdir_y(clawLength, anchorAngle)

image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_place(x, y, objPlayer) &amp;&amp; timer == 0) {
    objPlayer.x = x
    objPlayer.y = y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_place(x, y, objPlayer) &amp;&amp; timer == 0) {
    if (objPlayer.clawed == false)
        audio_play_sound(sndClawClick, 10, false)
    objPlayer.clawed = true
    objPlayer.hspeed = 0
    objPlayer.vspeed = 0
    objPlayer.gravity = 0
    objPlayer.sprite_index = sprPlayerJump
    image_index = 1
    if (keyboard_check_pressed(global.jumpButton) || keyboard_check_pressed(global.downButton)) {
        if (instance_exists(objPlayer)) {
            objPlayer.clawed = false
            objPlayer.gravity = 0.4 * global.grav; //player gravity
            if keyboard_check_pressed(global.jumpButton) {
                objPlayer.vspeed = -objPlayer.jump2;
                if (objPlayer.djump == 0)
                    audio_play_sound(sndDJump,0,false);
            }
        }
        timer = 15
    }
    
    if (keyboard_check(global.rightButton)) {
        rotationSide = 1
        flagL = false
        if (flagR == false) {
            audio_stop_sound(sndRopeStrain)
            audio_play_sound(sndRopeStrain, 10, false)
            flagR = true
            }
        }
    else if (keyboard_check(global.leftButton)) {
        flagR = false
        rotationSide = -1
        if (flagL == false) {
            audio_stop_sound(sndRopeStrain)
            audio_play_sound(sndRopeStrain, 10, false)
            flagL = true
            }
        }
    else {
        rotationSide = 0
        flagL = false
        flagR = false
        }
}

else {
    rotationSide = 0
    image_index = 0
    }

if (timer &gt; 0)
    timer--
    
if (rotationSide = 0)
    anchorAngle = lerp (anchorAngle, 270, .1)

if (rotationSide = 1) 
    anchorAngle = lerp (anchorAngle, 330, .1)

if (rotationSide = -1)
    anchorAngle = lerp (anchorAngle, 210, .1)

x = lerp(x, xstart+lengthdir_x(clawLength, anchorAngle), .1)
y = lerp(y, anchorPoint+lengthdir_y(clawLength, anchorAngle), .1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color($0c2a33)
draw_line_width(x, y-16, xstart, anchorPoint, 2)
draw_set_color($1c5667)
draw_line_width(x-2, y-16, xstart-2,anchorPoint, 2)

draw_set_color(c_white)
draw_sprite(sprClaw, image_index, x, y)
draw_sprite_ext(sprClawPoint, 0, xstart, anchorPoint, 1, 1, anchorAngle, c_white, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
