<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wobble_speed = .25*pi/room_speed; //speed of the wobble
wobble_distance = 16; //distance of the wobble
aa=irandom_range(0,360);

backgroundY1 = 293
backgroundY2 = 404
backgroundY3 = 553

backgroundX1 = 0
backgroundX2 = 0
backgroundX3 = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aa += wobble_speed
//if (aa &gt;= 360)
//    aa -= 360

backgroundY3 = 553 + wobble_distance*sin(aa);
backgroundY2 = 404 + wobble_distance*sin(aa/2);
backgroundY1 = 293 + wobble_distance*sin(aa/3);
background_y[4] = 585 + wobble_distance*sin(4*aa/3);

backgroundX1++
if (backgroundX1 &gt;= 160)
    backgroundX1 -= 160
    
backgroundX2 += .5
if (backgroundX2 &gt;= 160)
    backgroundX2 -= 160
    
backgroundX3 += .25
if (backgroundX3 &gt;= 160)
    backgroundX3 -= 160
    
background_x[4] = backgroundX1*2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(stormSys)
part_system_destroy(stormForeSys)

part_system_clear(partRainFront_sys);
part_system_destroy(partRainFront_sys);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stormSys = part_system_create()
part_system_depth(stormSys, 10000000)

stormForeSys = part_system_create()
part_system_depth(stormForeSys, -1000000)

snowstormPart = part_type_create()
part_type_shape(snowstormPart,  pt_shape_sphere)
part_type_size(snowstormPart, 4, 16, 0, 1)
part_type_color_mix(snowstormPart, $303030, $4b4b4b) //before, it was color 1 with the first hex code
part_type_direction(snowstormPart, -20, 20, 0, 1)
part_type_life(snowstormPart, 150*(room_width/800), 150*(room_width/800))
part_type_alpha3(snowstormPart, .05, .01, .05)
part_type_speed(snowstormPart, 3,8, 0, 0)

snowstormEmit = part_emitter_create(stormSys)
snowstormForeEmit = part_emitter_create(stormForeSys)

part_emitter_region(stormSys, snowstormEmit, -128, -128, -96, room_height+96, ps_shape_line, ps_distr_linear)  
part_emitter_stream(stormSys, snowstormEmit, snowstormPart, 1)

part_emitter_region(stormForeSys, snowstormForeEmit, -128, -128, -96, room_height+96, ps_shape_line, ps_distr_linear)  
part_emitter_stream(stormForeSys, snowstormForeEmit, snowstormPart, 1)

repeat (room_speed*3) {
    part_system_update(stormSys)
    part_system_update(stormForeSys)
    }
    

//rain particles
partRainFront_sys = part_system_create();
part_system_depth(partRainFront_sys,-1000);

partRain = part_type_create();
part_type_sprite (partRain, sprRainParticle, 0, 0, 0);
part_type_color1 (partRain, c_white);
part_type_alpha2(partRain,.2, 0);
part_type_speed(partRain,7,14,.1,0);
part_type_direction(partRain,-80,-80,0,0);
part_type_orientation(partRain,10,10,0,0,0);
part_type_life(partRain,0,200);

partRainFront_emit = part_emitter_create(partRainFront_sys);


part_emitter_region(partRainFront_sys,partRainFront_emit,-160,800, -16, -16, ps_shape_line,ps_distr_linear);
part_emitter_stream(partRainFront_sys,partRainFront_emit,partRain,4);

repeat(room_speed * 3)
{
   part_system_update(partRainFront_sys);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
var j;
var k;
    
for (i = -160+backgroundX3; i &lt; room_width; i += 160)
    draw_background(bStormSea4, i, backgroundY1)
    
for (j = -160+backgroundX2; j &lt; room_width; j += 160)
    draw_background(bStormSea3, j, backgroundY2)
    
for (k = -160+backgroundX1; k &lt; room_width; k += 160)
    draw_background(bStormSea2, k, backgroundY3)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
