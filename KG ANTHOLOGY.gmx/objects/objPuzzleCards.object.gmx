<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSlipBlockMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>phase = 0
drawArrowScale = 0
acc = 0
bubbleChange = 0

pointer = 0 //range from 0-5

values[0] = 0 //card 1 suit
values[1] = 0 //card 1 value
values[2] = 0 //card 2 suit
values[3] = 0 //card 2 value
values[4] = 0 //card 3 suit
values[5] = 0 //card 3 value

//[0, 3, 1, 1, 2, 8]
correctAns[0] = 0
correctAns[1] = 3
correctAns[2] = 1
correctAns[3] = 1
correctAns[4] = 2
correctAns[5] = 8

//Note: for suits:
//0 is club
//1 is diamond
//2 is heart
//3 is spade

//Note: for values:
//0 is ace
//1 is 2
//2 is 3
//3 is 4
//..and so on
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (phase == 0) {
    if (instance_exists(objPlayer) &amp;&amp; objPlayer.x &gt;= x &amp;&amp; objPlayer.x &lt;= x+sprite_width &amp;&amp; objPlayer.y &gt;= y &amp;&amp; objPlayer.y &lt;= y+sprite_height) {
        drawArrowScale = lerp(drawArrowScale, 1, .1)
        if (keyboard_check_pressed(global.upButton)) {
            phase = 1
            drawArrowScale = 1
            values[pointer]++
        } 
    }
    else
        drawArrowScale = lerp(drawArrowScale, 0, .5)
}

if (phase == 1) {
    //menu moving
    if (keyboard_check_pressed(vk_right)) pointer++
    if (keyboard_check_pressed(vk_left)) pointer--
    if (pointer &lt; 0) pointer = 5
    if (pointer &gt; 5) pointer = 0
    
    if (keyboard_check_pressed(vk_up))
        values[pointer]--
        
    if (keyboard_check_pressed(vk_down))
        values[pointer]++
        
    if (pointer%2 == 0) { //if suit
            if (values[pointer] &lt; 0) values[pointer] = 3
            if (values[pointer] &gt; 3) values[pointer] = 0
        }
        if (pointer%2 == 1) { //if value
            if (values[pointer] &lt; 0) values[pointer] = 12
            if (values[pointer] &gt; 12) values[pointer] = 0
        }
        
    objPlayer.frozen = true
    if (keyboard_check_pressed(global.shootButton) || (instance_exists(objPlayer) &amp;&amp; objPlayer.puzzleGUI = true)) {
        phase = 0
        objPlayer.frozen = false
    }
    
    if (array_equals(values, correctAns)) {
        audio_play_sound(sndPuzzleSolved, 10, false)
        instance_destroy()
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if (phase == 0)  
    draw_sprite_ext(sprDialoguePrompt, 0, x+sprite_width/2, y-32+(bubbleChange), drawArrowScale, drawArrowScale, 0, c_white, 1)
    

if (phase == 1) {
    draw_set_color(c_black)
    
    draw_text(64, 64, string(values[0]))
    draw_text(96, 64, string(values[1]))
    draw_text(128, 64, string(values[2]))
    draw_text(160, 64, string(values[3]))
    draw_text(192, 64, string(values[4]))
    draw_text(224, 64, string(values[5]))
    draw_set_color(c_white)
    
    draw_background_tiled(bMansionBGLighter, 32, 32)
    
    draw_sprite(sprCardSuits, values[0], 100, room_height/2)
    draw_sprite(sprCardValues, values[1], 196, room_height/2)
    draw_sprite(sprCardSuits, values[2], 352, room_height/2)
    draw_sprite(sprCardValues, values[3], 448, room_height/2)
    draw_sprite(sprCardSuits, values[4], 604, room_height/2)
    draw_sprite(sprCardValues, values[5], 700, room_height/2)
    
    if (pointer == 0)
        draw_sprite(sprCardArrows, 0, 100, room_height/2)
    if (pointer == 1)
        draw_sprite(sprCardArrows, 0, 196, room_height/2)
    if (pointer == 2)
        draw_sprite(sprCardArrows, 0, 352, room_height/2)
    if (pointer == 3)
        draw_sprite(sprCardArrows, 0, 448, room_height/2)
    if (pointer == 4)
        draw_sprite(sprCardArrows, 0, 604, room_height/2)
    if (pointer == 5)
        draw_sprite(sprCardArrows, 0, 700, room_height/2)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
