<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMMChild4</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//main variables
hp = 6 //should be 25
iframes = 0
maxHP = hp
phase = -1;
timer = 0;
GB = 255
drawX = x
drawY = y
drawAlpha = 0
shaker = 0

wobble_speed = .35*pi/room_speed; //speed of the wobble
wobble_distance = 48; //distance of the wobble
aa=irandom_range(0,360);
spinAngle = 120

image_xscale = 1.667
image_yscale = 1.667
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//iframes and visual code
if iframes &gt; 0 {iframes -= 1}
if (GB &lt; 255) {
    GB += 10
}
if (GB &gt;= 254) {GB = 255}

if (shaker &gt; 0) {
    shaker -= .5
    drawX += random_range(-shaker, shaker)
    drawY += random_range(-shaker, shaker)
    drawX = lerp (drawX, room_width/2-sprite_width/2+lengthdir_x(275, spinAngle), .05)
    drawY = lerp (drawY, room_height/2-sprite_height/2+lengthdir_y(275, spinAngle), .01)
    }
else {
    drawX = x
    drawY = y
}

aa+=wobble_speed;
x = room_width/2-sprite_width/2+lengthdir_x(275, spinAngle)
y = room_height/2-sprite_height/2+lengthdir_y(275, spinAngle)

spinAngle++

if (phase == -1) { //animation phase
    drawAlpha += .02
    if (drawAlpha == 1) 
        phase++
}

if (phase == 0) { //wait for MM3 to attack
    timer++
    if (timer == 225 || !instance_exists(objMMMini3)) {
        phase++
        timer = 0
        audio_play_sound(sndWarningSound, 10, false)
        with instance_create(x, y, objMMMiniSummon) {
            summoner = other.id
            sprite_index = other.sprite_index
            image_xscale = other.image_xscale
            image_yscale = other.image_yscale
        }
    }
}

if (phase == 1) { //do own attack
    if (timer%50 == 0 &amp;&amp; timer &lt;= 250) {
        scrMakeShapes(x+sprite_width/2, y+sprite_height/2, 90, 3, 5, 6, objMMProjectile)
    }
    timer++
    if (timer &gt;= 275) {
        if instance_exists(objMMProjectile)
            with objMMProjectile vspeed += .2
    }
    
    if (timer == 350) {
        timer = 0
        phase++
    }
}

if (phase == 2) { //wait for MM5 to attack
    timer++
    if (timer == 275 || !instance_exists(objMMMini5)) {
        timer = 0
        phase = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if iframes == 0 &amp;&amp; phase &gt;= 0 {
    hp -= 1
    iframes = 30
    //create hit apples
    audio_play_sound(sndMMBossHit, 10, false)
    GB = 0
    shaker = 10
    if (hp &lt;= 0) {
        instance_destroy();
        with instance_create(x, y, objMMMiniDeath) {
            image_xscale = other.image_xscale
            image_yscale = other.image_yscale
            sprite_index = other.sprite_index
        }
        if (instance_exists(objMMMini3)) with objMMMini3 {hp ++}
        if (instance_exists(objMMMini5)) with objMMMini5 {hp ++}
    }
    with other instance_destroy()
}

with other instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = .1
var red = make_color_rgb(255, GB, GB);
draw_sprite_ext(sprMMChild4, image_index, drawX, drawY, image_xscale, image_yscale, 0, red, drawAlpha)
draw_set_alpha(1)
draw_set_color(c_white)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
