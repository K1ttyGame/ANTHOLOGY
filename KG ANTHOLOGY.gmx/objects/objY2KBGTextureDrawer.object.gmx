<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sandSurf = noone
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(sandSurf))
    sandSurf = surface_create(room_width, room_height)


/*draw_set_color(c_black)
with (objBlock) {
    if (object_index != objFallingLeaf &amp;&amp; object_index != objTelescopingBlockSpawn &amp;&amp; object_index != objMovingShootBlock) draw_rectangle(x-1, y-1, x+sprite_width, y+sprite_height, false)
}
with (objSpikeUp) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
}
with (objSpikeRight) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
}
with (objSpikeDown) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
}
with (objSpikeLeft) {
    draw_sprite(sprite_index, 0, x-1, y)
    draw_sprite(sprite_index, 0, x+1, y)
    draw_sprite(sprite_index, 0, x, y+1)
    draw_sprite(sprite_index, 0, x, y-1)
    }*/
    
if (surface_exists(sandSurf)) {    
    surface_set_target(sandSurf)
    
    draw_clear_alpha(c_black, 0)
    draw_set_color_write_enable(true, true, true, false)
    draw_background_tiled(bGrassTextureBG, 0, 0)
    
    draw_set_color_write_enable(false,false,false,true);
    draw_set_alpha(1);
    with(objY2KBG) {
        draw_set_color(c_white)
        draw_rectangle(x, y, x+sprite_width-1, y+sprite_height-1, false)
        var i;
        var j;
        for (i = x-16; i &lt; x+sprite_width-16; i += 16) {
            for (j = y-16; j &lt; y+sprite_height; j += 16) {
                draw_sprite(sprGrassEdgeTexture, 0, i, j)
            }
        }
    }
    draw_set_color_write_enable(true,true,true,true);
    surface_reset_target()
    draw_surface(sandSurf, 0, 0)
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
