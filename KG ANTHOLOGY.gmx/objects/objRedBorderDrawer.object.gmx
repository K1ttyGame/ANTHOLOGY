<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayer)) {
    drawLeftSlider = objPlayer.x
    drawLeftSlider = clamp(drawLeftSlider, 0, 100)
    
    drawRightSlider = room_width-objPlayer.x
    drawRightSlider = clamp(drawRightSlider, 0, 100)
    
    drawTopSlider = objPlayer.y
    drawTopSlider = clamp(drawTopSlider, 0, 100)
    
    drawBottomSlider = room_height-objPlayer.y
    drawBottomSlider = clamp(drawBottomSlider, 0, 100)
}

else instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dontDrawLeft = false
dontDrawRight = false
dontDrawTop = false
dontDrawBottom = false

i = 0; //check for vertical transitions
for (i = 0; i &lt; room_height; i += 16) {
    if (instance_position(-32, i, objOutsideRoomChanger)) {
        dontDrawLeft = true;
    }
    if (instance_position(room_width-32, i, objOutsideRoomChanger)) {
        dontDrawRight = true;
    }
}

for (i = 0; i &lt; room_width; i += 16) {
    if (instance_position(i, -32, objOutsideRoomChanger)) {
        dontDrawTop = true;
    }
    if (instance_position(i, room_height-32, objOutsideRoomChanger)) {
        dontDrawBottom = true;
    }
}

drawLeftSlider = 0;
drawRightSlider = 0;
drawTopSlider = 0;
drawBottomSlider = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*(draw_text(16, 16, string(dontDrawLeft)+"Left")
draw_text(16, 32, string(dontDrawRight)+"Right")
draw_text(16, 48, string(dontDrawTop)+"Up")
draw_text(16, 63, string(dontDrawBottom)+"Down")*/

if (!dontDrawLeft) {
    draw_set_alpha((100-drawLeftSlider)/200)
    for (i = 0; i &lt; 608; i += 32)
        draw_background(bRedEdgeGlowL, 0, i);
}

if (!dontDrawRight) {
    draw_set_alpha((100-drawRightSlider)/200)
    for (i = 0; i &lt; 608; i += 32)
        draw_background(bRedEdgeGlowR, 800-32, i);
}

if (!dontDrawTop) {
    draw_set_alpha((100-drawTopSlider)/200)
    for (i = 0; i &lt; 800; i += 32)
        draw_background(bRedEdgeGlowT, i, 0);
}

if (!dontDrawBottom) {
    draw_set_alpha((100-drawBottomSlider)/200)
    for (i = 0; i &lt; 800; i += 32)
        draw_background(bRedEdgeGlowB, i, 608-32);
}


draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
